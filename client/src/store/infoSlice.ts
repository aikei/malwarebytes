import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';
import axios from 'axios';

const initialState: {
  accessToken: string,
  showSpinner: boolean,
} = {
  accessToken: '',
  showSpinner: false
}

export const logIn = createAsyncThunk('login', async () => {
  console.log('logIn thunk')
  const resp = await axios.post('/auth/login').catch(err => {
    throw err;
  })
  return resp.data;
});

const infoSlice = createSlice({
  name: 'info',
  initialState,
  reducers: {
    showSpinner(state, action) {
      state.showSpinner = action.payload.show;
    },
    setAccessToken(state, action) {
      state.accessToken = action.payload;
    }
  },
  extraReducers(builder) {
    builder
      .addCase(logIn.pending, (state, action) => {
        state.showSpinner = true;
      })
      .addCase(logIn.fulfilled, (state, action) => {
        state.accessToken = action.payload.accessToken;
        console.log('accessToken:', state.accessToken);
        state.showSpinner = false;
      })
      .addCase(logIn.rejected, (state, action) => {

      });
  }
});

export default infoSlice.reducer;

export const { showSpinner, setAccessToken } = infoSlice.actions;

export type InfoState = typeof initialState;
